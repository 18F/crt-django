# Generated by Django 2.2.12 on 2020-04-30 18:00

from django.db import migrations

from cts_forms.model_variables import (HATE_CRIMES_TRAFFICKING_MODEL_CHOICES,
                                       PROTECTED_MODEL_CHOICES)


class Migration(migrations.Migration):

    dependencies = [
        ('cts_forms', '0066_add_new_choicefields'),
    ]

    def forward(apps, schema_editor):
        """
        Set value field of existing HateCrimesandTrafficking and ProtectedClass instances
        to those matching their labels set in original field

        This migration is expected to fail and no changes saved if _any_
        existing HateCrimesandTrafficking or ProtectedClass instance cannot
        be updated
        """
        HateCrimesandTrafficking = apps.get_model('cts_forms', 'HateCrimesandTrafficking')
        ProtectedClass = apps.get_model('cts_forms', 'ProtectedClass')

        hc_labels = {label: value for value, label in HATE_CRIMES_TRAFFICKING_MODEL_CHOICES}

        for hc in HateCrimesandTrafficking.objects.all():
            try:
                hc.value = hc_labels[hc.hatecrimes_trafficking_option]
            except KeyError:
                # Live instances may have punctuation, try to match without
                hc.value = hc_labels[hc.hatecrimes_trafficking_option[:-1]]
            hc.save()

        pc_labels = {label: value for value, label in PROTECTED_MODEL_CHOICES}
        for pc in ProtectedClass.objects.all():
            pc.value = pc_labels[pc.protected_class]
            pc.save()


    def reverse(apps, schema_editor):
        """Empty the values places in `value`"""
        HateCrimesandTrafficking = apps.get_model('cts_forms', 'HateCrimesandTrafficking')
        ProtectedClass = apps.get_model('cts_forms', 'ProtectedClass')
        for hc in HateCrimesandTrafficking.objects.all():
            hc.value = ''
            hc.save

        for pc in ProtectedClass.objects.all():
            pc.value = ''
            pc.save()

    operations = [
        migrations.RunPython(forward, reverse_code=reverse),
    ]
